<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDelete.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAABBpJREFUeF7t
        m8lPE3EUx0ejntxjvLvdNVHPXI3y6wDWiNr5TYrhajR4Q63epHG5wM2gYfsDXO4a4kFQTBA1UTozkBhZ
        yuJJTaC+Vx4i09eNdtqZX/0mH6ad3/beML/5LfOqea2vDZH9Tsg46wjjlh2SA7Yu38IxAcwBvwn8nEin
        CdnvhORN+NyEZamaYGmi3jwBDt0HRoFlILVBsOyorZv3JkTkOFXvT305dXEnGNsGfCTjvWAMaPssojuo
        2eprMtyy1wrJ22AY3sac0V4wZ+lmzDl9YQ+ZUXmlNG0T9FUD+uw0Y2ClSMKz5UoqFttMZlVG42fMI9D4
        a5cx1WRwQpeHyDxvZQuzERqcdxngB35YwjxPZpZfeJtBv3vINOwvYMQoe5cYC4e3QeUDGY35FqNvuLV1
        K5lfmtLOC/mCb8jXPCv5IuCTHoa4J0zlwQBmlSV1h0D0+fzEyZ3i5OjyHFNZILF02UxuFaZJcekwFFx0
        VxRgFpym6EFyL7ewz0ABP01yygI8y17hM43czC4YQi5zFaiAJQxJbvLChQ1knHUXVIgpeLDvJnczZQvj
        DlNIKXCzhdxdL1rPV3JJWy2S7H4CLHKuM5nVRBjXyO01QcKnjIzqMkZuryihGyeZTGojjGPkPsz6hHzA
        ZlKbtSkyfPngSqwFRtLO4947fCll6zqoLH+rb96n4UsLJrE2EGYjLnljbGIOnKaW1HRHZ2q2s9sXoC1O
        Y5S1NSe6eQP7f9FbXTPxrpTfhDZxtuahFy/AsOtkXpJdj6lZ/wht4mzNhaXLN7j6s7nEXKhyAYAE3gFJ
        18m8KHQBZvAC/HKdzItCF+Dn/wsAf2q9C/x/CNb4MChkP5eYC2UmQkL2wFI4HbzEZ8gCTjuVmAoL2a5h
        NBabWBMYDbW8HF5KL4dR8AXD2bhMKvMu7TwKvmBMH5dJYYwOcl/TMAiRz6Qulm4eJfdXBCdrqRus3xZH
        wUmM8uQyqwf3YgRfF0Fi7b4aQ1HIK1dIHXAfMJsw9hZmR9UMffWa7+Ph1l3kLi9bmFGmoBI4uhkhN7ML
        w0gg86C7cNBxQvJlQSEyKAw8hkIL7koCzHzBQVKrUuqNEb4B2ogw8JitMEBYQt4ld4oX/Siim6s4GBh9
        JUeOY8AxVPScb8DHCPm0bBHjqbq6LbZuPGIb8iNC9pTN+VXR8BjPaMxfLGOfL3i424hgGalDQ35cMyxi
        gDeZ6a1wTMXYW8aIqoCTHLs+coDMq4xohDDAgCm3QRUkCf/1Vk9v+XzC2FsMP0VjXMZ5ySyu6vIubCqp
        6XB4O240gHFeRpyNQte7im1Rs/4UBiGCsXE4vofj0j8OFAuWHcENzIw9vKAI997TP7YUsh1nZuDQEHwe
        hyN2GXw1jyTp3BDQS3kb/u7beyZN+wNO5ObtPx1rcQAAAABJRU5ErkJggg==
</value>
  </data>
</root>